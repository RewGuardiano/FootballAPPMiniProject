
# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
stages:          
  - build
  - test
  - sonar_scan
  - deploy
build-job:       
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
unit-test-job:   
  stage: test    
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"
lint-test-job:   
  stage: test    
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."
sonar_scan:
  stage: sonar_scan
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_HOST_URL: "http://localhost:9000" # Replace with your SonarQube server URL
    GITHUB_REPO_URL: "https://github.com/RewGuardiano/FootballAPPMiniProject" # Replace with your GitHub repo URL
  script:
    - apt-get update && apt-get install -y git # Install Git if necessary
    - git clone https://${GITHUB_TOKEN}@${GITHUB_REPO_URL} source-code # Clone the GitHub repo
    - cd source-code
    - sonar-scanner \
        -Dsonar.projectKey=your_project_key \
        -Dsonar.sources=. \
        -Dsonar.host.url=$SONAR_HOST_URL \
        -Dsonar.login=$SONAR_TOKEN
  only:
    - main 
deploy-job:      
  stage: deploy  
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
